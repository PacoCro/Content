<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\Entity\Repository;

use Zikula\ContentModule\Entity\Repository\Base\AbstractPageRepository;

/**
 * Repository class used to implement own convenience methods for performing certain DQL queries.
 *
 * This is the concrete repository class for page entities.
 */
class PageRepository extends AbstractPageRepository
{
    /**
     * @inheritDoc
     */
    public function selectBySlug($slugTitle = '', $useJoins = true, $slimMode = false, $excludeId = 0)
    {
        $result = parent::selectBySlug($slugTitle, $useJoins, $slimMode, $excludeId);
        if (null !== $result) {
            return $result;
        }

        // if $slugTitle is foo, try to find `/main/foo` but not `/main/123foo` and `/main/foo123`

        $qb = $this->genericBaseQuery('', '', $useJoins, $slimMode);

        $qb->andWhere('tbl.slug LIKE :slug')
           ->setParameter('slug', '%/' . $slugTitle);

        if ($excludeId > 0) {
            $qb = $this->addExclusion($qb, [$excludeId]);
        }

        if (!$slimMode && null !== $this->collectionFilterHelper) {
            $qb = $this->collectionFilterHelper->applyDefaultFilters('page', $qb);
        }

        $query = $this->getQueryFromBuilder($qb);

        $results = $query->getResult();

        return null !== $results && count($results) > 0 ? $results[0] : null;
    }
}
