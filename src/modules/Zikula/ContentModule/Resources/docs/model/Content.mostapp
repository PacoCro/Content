application "Content" {
    documentation "Flexible hierachical page management."
    vendor "Zikula"
    author "Axel Guckelsberger"
    email "vorstand@zikula.de"
    url "https://zikula.de"
    version "5.0.0"
    prefix "content"
    generateListContentType false
    generateDetailContentType false
    generatePdfSupport true
    displayActionsStyle BUTTON_GROUP
    skipFiles "
        Container/LinkContainer.php,
        ContentModuleInstaller.php,
        Controller/ContentItemController.php,
        ZikulaContentModule.php
    "
    markFiles "
        composer.json,
        Resources/config/services.yml
    "
    entities {
        entity "page" leading loggable categorisable {
            nameMultiple "pages"
            displayPattern "#title#"
            lockType PAGELOCK_OPTIMISTIC
            tree NESTED
            fields {
                string "title" translatable {
                    defaultValue ""
                    sluggablePosition 1
                },
                boolean "showTitle" {
                    defaultValue "true"
                    mandatory false
                },
                text "metaDescription" translatable {
                    defaultValue ""
                    mandatory false
                    displayType DISPLAY
                },
                boolean "skipUiHookSubscriber" {
                    defaultValue "false"
                    mandatory false
                    displayType DISPLAY
                },
                boolean "skipFilterHookSubscriber" {
                    defaultValue "false"
                    mandatory false
                    displayType DISPLAY
                },
                array "layout" {
                    defaultValue ""
                    mandatory false
                    arrayType JSON_ARRAY
                },
                integer "views" {
                    defaultValue "0"
                    mandatory false
                },
                boolean "active" ajaxTogglability {
                    defaultValue "true"
                    mandatory false
                },
                datetime "activeFrom" nullable startDate {
                    defaultValue ""
                    mandatory false
                },
                datetime "activeTo" nullable endDate {
                    defaultValue ""
                    mandatory false
                },
                boolean "inMenu" ajaxTogglability {
                    defaultValue "true"
                    mandatory false
                },
                string "optionalString1" translatable {
                    defaultValue ""
                    mandatory false
                    displayType DISPLAY_SORTING
                },
                string "optionalString2" translatable {
                    defaultValue ""
                    mandatory false
                    displayType DISPLAY_SORTING
                },
                text "optionalText" translatable {
                    defaultValue ""
                    mandatory false
                    displayType DISPLAY
                },
                integer "currentVersion" version {
                    defaultValue "1"
                },
                array "versionData" {
                    defaultValue ""
                    mandatory false
                    arrayType JSON_ARRAY
                }
            }
            actions {
                mainAction "Index",
                viewAction "View",
                displayAction "Display",
                editAction "Edit"
            }
        },
        entity "contentItem" {
            nameMultiple "contentItems"
            displayPattern "#areaIndex#-#areaPosition#: #owningBundle# - #owningType#"
            fields {
                integer "areaIndex" {
                    defaultValue "0"
                    mandatory false
                },
                integer "areaPosition" {
                    defaultValue "0"
                    mandatory false
                },
                string "owningType" {
                    defaultValue ""
                    length 255
                },
                array "contentData" translatable {
                    mandatory false
                },
                boolean "active" ajaxTogglability {
                    defaultValue "true"
                    mandatory false
                },
                datetime "activeFrom" nullable startDate {
                    defaultValue ""
                    mandatory false
                },
                datetime "activeTo" nullable endDate {
                    defaultValue ""
                    mandatory false
                },
                list "scope" {
                    defaultValue "1"
                    length 1
                    items {
                        default listItem "Public (all)" ( "1" ),
                        listItem "Only logged in members" ( "0" ),
                        listItem "Only not logged in people" ( "2" )
                    }
                },
                string "stylingClasses" {
                    mandatory false
                }
            }
            indexes {
                index "activeIndex" {
                    items {
                        indexItem "active"
                    }
                },
                index "positionIndex" {
                    items {
                        indexItem "areaIndex",
                        indexItem "areaPosition"
                    }
                }
            }
            actions {
                mainAction "Index"
            }
        },
        entity "searchable" {
            nameMultiple "searchables"
            displayPattern "#searchLanguage#"
            fields {
                text "searchText" {
                    defaultValue ""
                    length 50000
                },
                string "searchLanguage" {
                    defaultValue ""
                    length 10
                    role LOCALE
                }
            }
            actions {
                mainAction "Index"
            }
        }
    }
    relations {
        one2many bidirectional {
            source "page"
            sourceAlias "page"
            target "contentItem"
            targetAlias "contentItems"
            targetEditing NONE
            cascade REMOVE_DETACH
            cascadeReverse PERSIST
            orderBy "areaIndex, areaPosition"
        },
        one2many bidirectional {
            source "contentItem"
            sourceAlias "contentItem"
            target "searchable"
            targetAlias "searchables"
        }
    }
    variables {
        varContainer "GeneralSettings" {
            fields {
                list "stateOfNewPages" {
                    defaultValue ""
                    length 5
                    items {
                        default listItem "New pages will be active and available in the menu" ( "1" ),
                        listItem "New pages will be inactive and available in the menu" ( "2" ),
                        listItem "New pages will be active and not available in the menu" ( "3" ),
                        listItem "New pages will be inactive and not available in the menu" ( "4" )
                    }
                },
                list "pageInfoLocation" {
                    defaultValue ""
                    length 10
                    items {
                        default listItem "Top of the page, left of the page title" ( "top" ),
                        listItem "Bottom of the page" ( "bottom" )
                    }
                },
                boolean "overridePageTitle" {
                    documentation "Override page title with the Content page title"
                    defaultValue "true"
                    mandatory false
                },
                boolean "countPageViews" {
                    documentation "Page views are only counted when not in preview or edit mode and only when the user has no edit access."
                    defaultValue "false"
                    mandatory false
                },
                string "googleMapsApiKey" {
                    documentation "If you want to use Google maps you need an API key for it."
                    mandatory false
                },
                boolean "enableRawPlugin" {
                    documentation "Whether to enable the unfiltered raw text plugin. Use this plugin with caution and if you can trust your editors, since no filtering is being done on the content. To be used for iframes, JavaScript blocks, etc."
                    defaultValue "false"
                    mandatory false
                },
                text "stylingClasses" {
                    documentation "A list of CSS class names available for styling of content elements. The end user can select these classes for each element on a page - for instance \"note\" for an element styled as a note. Write one class name on each line. Please separate the CSS classes and displaynames with | - eg. \"note | Memo\"."
                    defaultValue "greybox|Grey box"
                    length 5000
                },
                boolean "inheritPermissions" {
                    documentation "Whether to inherit permissions from parent to child pages or not."
                    defaultValue "false"
                    mandatory false
                }
            }
        }
    }
}
