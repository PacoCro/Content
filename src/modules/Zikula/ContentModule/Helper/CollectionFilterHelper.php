<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\Helper;

use Doctrine\ORM\QueryBuilder;
use Zikula\ContentModule\Helper\Base\AbstractCollectionFilterHelper;

/**
 * Entity collection filter helper implementation class.
 */
class CollectionFilterHelper extends AbstractCollectionFilterHelper
{
    /**
     * @inheritDoc
     */
    protected function applyDefaultFiltersForPage(QueryBuilder $qb, array $parameters = [])
    {
        $qb = parent::applyDefaultFiltersForPage($qb, $parameters);
        if (true === $this->skipDefaultFilters()) {
            return $qb;
        }

        $qb->andWhere('tbl.active = 1');
        if (in_array('tblContentItems', $qb->getAllAliases())) {
            $qb->andWhere('tblContentItems.active = 1');
            $qb = $this->applyDateRangeFilterForContentItem($qb, 'tblContentItems');
            $qb->andWhere('tblContentItems.scope IN (:allowedScopes)')
               ->setParameter('allowedScopes', $this->getUserScopes());
        }

        return $qb;
    }

    /**
     * @inheritDoc
     */
    protected function applyDefaultFiltersForContentItem(QueryBuilder $qb, array $parameters = [])
    {
        $qb = parent::applyDefaultFiltersForContentItem($qb, $parameters);
        if (true === $this->skipDefaultFilters()) {
            return $qb;
        }

        $qb->andWhere('tbl.active = 1');
        if (in_array('tblPage', $qb->getAllAliases())) {
            $qb->andWhere('tblPage.active = 1');
            $qb = $this->applyDateRangeFilterForPage($qb, 'tblPage');
            $qb->andWhere('tbl.scope IN (:allowedScopes)')
               ->setParameter('allowedScopes', $this->getUserScopes());
        }

        return $qb;
    }

    /**
     * Checks if default filters should be skipped for the current request.
     *
     * @return boolean
     */
    protected function skipDefaultFilters()
    {
        if (null === $this->request) {
            return true;
        }
        if ($this->request->isXmlHttpRequest()) {
            return true;
        }
        $routeName = $this->request->get('_route');
        $isAdminArea = false !== strpos($routeName, 'zikulacontentmodule_page_admin') || false !== strpos($routeName, 'zikulacontentmodule_contentitem_admin');
        if ($isAdminArea/* || $this->permissionHelper->hasComponentPermission('page', ACCESS_ADD)*/) {
            return true;
        }
        if (in_array($routeName, ['zikulacontentmodule_page_managecontent', 'zikulacontentmodule_contentitem_displayediting'])) {
            return true;
        }

        return false;
    }

    /**
     * Returns the allowed content item scopes for the current user.
     *
     * @return array
     */
    protected function getUserScopes()
    {
        $scopes = [];
        $scopes[] = '0'; // public (all)

        $isLoggedIn = $this->currentUserApi->isLoggedIn();
        if ($isLoggedIn) {
            $scopes[] = '-1'; // only logged in members
        } else {
            $scopes[] = '-2'; // only not logged in people
        }

        // get user groups
        $groups = $this->currentUserApi->get('groups');
        foreach ($groups as $group) {
            $scopes[] = strval($group->getGid());
        }

        return $scopes;
    }
}
