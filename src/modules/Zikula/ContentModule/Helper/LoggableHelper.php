<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\Helper;

use Zikula\ContentModule\Helper\Base\AbstractLoggableHelper;
use Zikula\ContentModule\Entity\PageEntity;

/**
 * Helper implementation class for loggable behaviour.
 */
class LoggableHelper extends AbstractLoggableHelper
{
    /**
     * @inheritDoc
     */
    protected function translateActionDescriptionInternal($text = '', array $parameters = [])
    {
        $actionTranslated = parent::translateActionDescriptionInternal($text, $parameters);
        switch ($text) {
            case '_HISTORY_PAGE_CONTENT_CREATED':
                $actionTranslated = $this->__('Content created');
                break;
            case '_HISTORY_PAGE_CONTENT_UPDATED':
                $actionTranslated = $this->__('Content updated');
                break;
            case '_HISTORY_PAGE_CONTENT_CLONED':
                $actionTranslated = $this->__('Content cloned');
                break;
            case '_HISTORY_PAGE_CONTENT_DELETED':
                $actionTranslated = $this->__('Content deleted');
                break;
            case '_HISTORY_PAGE_LAYOUT_CHANGED':
                $actionTranslated = $this->__('Layout changed (e.g. content moved or resized)');
                break;
        }

        return $actionTranslated;
    }

    /**
     * Stores data about a page's content items and their translations into the contentData
     * field of the owning page in order to add this information into the revisioning.
     *
     * @param PageEntity $page
     */
    public function updateContentData(PageEntity $page)
    {
        $page->setContentData($contentData);
    }
}
