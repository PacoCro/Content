<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\Collector;

use Zikula\ContentModule\ContentTypeInterface;

/**
 * Content type collector implementation class.
 */
class ContentTypeCollector
{
    /**
     * List of service objects
     * @var array
     */
    private $contentTypes;

    /**
     * ContentTypeCollector constructor.
     */
    public function __construct()
    {
        $this->contentTypes = [];
    }

    /**
     * Adds a content type to the collection.
     *
     * @param ContentTypeInterface $contentType
     */
    public function add(ContentTypeInterface $contentType)
    {
        $id = $contentType->getBundleName() . $contentType->getName();

        $this->contentTypes[$id] = $contentType;
    }

    /**
     * Returns a content type from the collection by service.id.
     *
     * @param $id
     * @return ContentTypeInterface
     */
    public function get($id)
    {
        return isset($this->contentTypes[$id]) ? $this->contentTypes[$id] : null;
    }

    /**
     * Returns all the content types in the collection.
     *
     * @return ContentTypeInterface[]
     */
    public function getAll()
    {
        $this->sortTypes();

        return $this->contentTypes;
    }

    /**
     * Returns all active content types in the collection.
     *
     * @return ContentTypeInterface[]
     */
    public function getActive()
    {
        return array_filter($this->getAll(), function($item) {
            return $item->isActive();
        });
    }

    /**
     * Sorts available types by their title.
     */
    private function sortTypes() {
        $types = $this->contentTypes;
        usort($types, function ($a, $b) {
            return strcmp($a->getTitle(), $b->getTitle());
        });
        $this->contentTypes = $types;
    }

    /**
     * @return array
     */
    public function getContentTypesChoiceList()
    {
        $this->sortTypes();

        $choices = [];
        foreach ($this->contentTypes as $contentTypeId => $contentType) {
            $choices[$contentType->getTitle()] = $contentTypeId;
        }
        ksort($choices);

        return $choices;
    }
}
