<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <vorstand@zikula.de>.
 * @link https://zikula.de
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\Listener\Base;

use Symfony\Component\EventDispatcher\EventSubscriberInterface;
use Symfony\Component\Filesystem\Filesystem;
use Symfony\Component\Finder\Finder;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\RequestStack;
use Symfony\Component\HttpKernel\HttpKernelInterface;
use Zikula\Core\Event\GenericEvent;
use Zikula\ScribiteModule\Event\EditorHelperEvent;

/**
 * Event handler implementation class for special purposes and 3rd party api support.
 */
abstract class AbstractThirdPartyListener implements EventSubscriberInterface
{
    /**
     * @var Filesystem
     */
    protected $filesystem;
    
    /**
     * @var Request
     */
    protected $request;
    
    /**
     * ThirdPartyListener constructor.
     *
     * @param Filesystem   $filesystem   Filesystem service instance
     * @param RequestStack $requestStack RequestStack service instance
     *
     * @return void
     */
    public function __construct(Filesystem $filesystem, RequestStack $requestStack)
    {
        $this->filesystem = $filesystem;
        $this->request = $requestStack->getCurrentRequest();
    }
    
    /**
     * Makes our handlers known to the event system.
     */
    public static function getSubscribedEvents()
    {
        return [
            'module.scribite.editorhelpers'           => ['getEditorHelpers', 5],
            'moduleplugin.ckeditor.externalplugins'   => ['getCKEditorPlugins', 5],
            'moduleplugin.quill.externalplugins'      => ['getQuillPlugins', 5],
            'moduleplugin.summernote.externalplugins' => ['getSummernotePlugins', 5],
            'moduleplugin.tinymce.externalplugins'    => ['getTinyMcePlugins', 5]
        ];
    }
    
    
    /**
     * Listener for the `module.scribite.editorhelpers` event.
     *
     * This occurs when Scribite adds pagevars to the editor page.
     * ZikulaContentModule will use this to add a javascript helper to add custom items.
     *
     * You can access general data available in the event.
     *
     * The event name:
     *     `echo 'Event: ' . $event->getName();`
     *
     * @param EditorHelperEvent $event The event instance
     */
    public function getEditorHelpers(EditorHelperEvent $event)
    {
        // install assets for Scribite plugins
        $targetDir = 'web/modules/zikulacontent';
        $finder = new Finder();
        if (!$this->filesystem->exists($targetDir)) {
            $this->filesystem->mkdir($targetDir, 0777);
            if (is_dir($originDir = 'modules/Zikula/ContentModule/Resources/public')) {
                $this->filesystem->mirror($originDir, $targetDir, Finder::create()->in($originDir));
            }
            if (is_dir($originDir = 'modules/Zikula/ContentModule/Resources/scribite')) {
                $targetDir .= '/scribite';
                $this->filesystem->mkdir($targetDir, 0777);
                $this->filesystem->mirror($originDir, $targetDir, Finder::create()->in($originDir));
            }
        }
    
        $event->getHelperCollection()->add(
            [
                'module' => 'ZikulaContentModule',
                'type' => 'javascript',
                'path' => $this->request->getBasePath() . '/web/modules/zikulacontent/js/ZikulaContentModule.Finder.js'
            ]
        );
    }
    
    /**
     * Listener for the `moduleplugin.ckeditor.externalplugins` event.
     *
     * Adds external plugin to CKEditor.
     *
     * You can access general data available in the event.
     *
     * The event name:
     *     `echo 'Event: ' . $event->getName();`
     *
     * @param GenericEvent $event The event instance
     */
    public function getCKEditorPlugins(GenericEvent $event)
    {
        $event->getSubject()->add([
            'name' => 'zikulacontentmodule',
            'path' => $this->request->getBasePath() . '/web/modules/zikulacontent/scribite/CKEditor/zikulacontentmodule/',
            'file' => 'plugin.js',
            'img' => 'ed_zikulacontentmodule.gif'
        ]);
    }
    
    /**
     * Listener for the `moduleplugin.quill.externalplugins` event.
     *
     * Adds external plugin to Quill.
     *
     * You can access general data available in the event.
     *
     * The event name:
     *     `echo 'Event: ' . $event->getName();`
     *
     * @param GenericEvent $event The event instance
     */
    public function getQuillPlugins(GenericEvent $event)
    {
        $event->getSubject()->add([
            'name' => 'zikulacontentmodule',
            'path' => $this->request->getBasePath() . '/web/modules/zikulacontent/scribite/Quill/zikulacontentmodule/plugin.js'
        ]);
    }
    
    /**
     * Listener for the `moduleplugin.summernote.externalplugins` event.
     *
     * Adds external plugin to Summernote.
     *
     * You can access general data available in the event.
     *
     * The event name:
     *     `echo 'Event: ' . $event->getName();`
     *
     * @param GenericEvent $event The event instance
     */
    public function getSummernotePlugins(GenericEvent $event)
    {
        $event->getSubject()->add([
            'name' => 'zikulacontentmodule',
            'path' => $this->request->getBasePath() . '/web/modules/zikulacontent/scribite/Summernote/zikulacontentmodule/plugin.js'
        ]);
    }
    
    /**
     * Listener for the `moduleplugin.tinymce.externalplugins` event.
     *
     * Adds external plugin to TinyMce.
     *
     * You can access general data available in the event.
     *
     * The event name:
     *     `echo 'Event: ' . $event->getName();`
     *
     * @param GenericEvent $event The event instance
     */
    public function getTinyMcePlugins(GenericEvent $event)
    {
        $event->getSubject()->add([
            'name' => 'zikulacontentmodule',
            'path' => $this->request->getBasePath() . '/web/modules/zikulacontent/scribite/TinyMce/zikulacontentmodule/plugin.js'
        ]);
    }
}
