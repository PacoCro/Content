<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @link https://zikula.de
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\Event\Base;

use Symfony\Component\EventDispatcher\Event;
use Zikula\ContentModule\Entity\SearchableEntity;

/**
 * Event base class for filtering searchable processing.
 */
class AbstractFilterSearchableEvent extends Event
{
    /**
     * @var SearchableEntity Reference to treated entity instance.
     */
    protected $searchable;

    /**
     * @var array Entity change set for preUpdate events.
     */
    protected $entityChangeSet = [];

    /**
     * FilterSearchableEvent constructor.
     *
     * @param SearchableEntity $searchable Processed entity
     * @param array $entityChangeSet Change set for preUpdate events
     */
    public function __construct(SearchableEntity $searchable, array $entityChangeSet = [])
    {
        $this->searchable = $searchable;
        $this->entityChangeSet = $entityChangeSet;
    }

    /**
     * Returns the entity.
     *
     * @return SearchableEntity
     */
    public function getSearchable()
    {
        return $this->searchable;
    }

    /**
     * Returns the change set.
     *
     * @return array Entity change set
     */
    public function getEntityChangeSet()
    {
        return $this->entityChangeSet;
    }
}
