<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.4.0 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\Event\Base;

use Symfony\Component\EventDispatcher\Event;
use Zikula\ContentModule\Entity\ContentItemEntity;

/**
 * Event base class for filtering content item processing.
 */
class AbstractFilterContentItemEvent extends Event
{
    /**
     * @var ContentItemEntity Reference to treated entity instance.
     */
    protected $contentItem;

    /**
     * @var array Entity change set for preUpdate events.
     */
    protected $entityChangeSet = [];

    /**
     * FilterContentItemEvent constructor.
     *
     * @param ContentItemEntity $contentItem Processed entity
     * @param array $entityChangeSet Change set for preUpdate events
     */
    public function __construct(ContentItemEntity $contentItem, array $entityChangeSet = [])
    {
        $this->contentItem = $contentItem;
        $this->entityChangeSet = $entityChangeSet;
    }

    /**
     * Returns the entity.
     *
     * @return ContentItemEntity
     */
    public function getContentItem()
    {
        return $this->contentItem;
    }

    /**
     * Returns the change set.
     *
     * @return array Entity change set
     */
    public function getEntityChangeSet()
    {
        return $this->entityChangeSet;
    }
}
