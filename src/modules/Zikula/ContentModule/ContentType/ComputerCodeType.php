<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <vorstand@zikula.de>.
 * @link https://zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\ContentType;

use Zikula\ContentModule\AbstractContentType;

/**
 * Computer code content type.
 */
class ComputerCodeType extends AbstractContentType
{
    /**
     * @inheritDoc
     */
    public function getCategory()
    {
        return ContentTypeInterface::CATEGORY_BASIC;
    }

    /**
     * @inheritDoc
     */
    public function getIcon()
    {
        return 'code';
    }

    /**
     * @inheritDoc
     */
    public function getTitle()
    {
        return $this->__('Computer code');
    }

    /**
     * @inheritDoc
     */
    public function getDescription()
    {
        return $this->__('A text editor for computer code. Line numbers are added to the text and it is displayed in a monospaced font.');
    }

    /**
     * @inheritDoc
     */
    public function getDefaultData()
    {
        return [
            'text' => '',
            'codeFilter' => 'native'
        ];
    }

    /**
     * @inheritDoc
     */
    public function getSearchableText()
    {
        return html_entity_decode(strip_tags($this->data['text']));
    }

/** TODO
    function display()
    {
        if (ModUtil::available('BBCode') && ($this->codeFilter == 'bbcode')) {
            $code = '[code]' . $this->text . '[/code]';
            PageUtil::addVar('stylesheet', 'modules/BBCode/style/style.css');
            return ModUtil::apiFunc('BBCode', 'User', 'transform', array('message' => $code));
        } else {
            return $this->transformCode($this->text, true);
        }
    }

    function displayEditing()
    {
        // <pre> does not work in IE 7 with the portal javascript
        return $this->transformCode($this->text, false);
    }

    public function startEditing() {
        if (isset($this->codeFilter)) {
            $this->view->assign('codeFilter', $this->codeFilter);
        }
    }
*/
    /**
     * @inheritDoc
     */
    public function getEditFormClass()
    {
        return ''; // TODO
    }

    /**
     * Processes the code.
     *
     * @param string $code
     * @param boolean $usePre
     * @return string
     */
    private function transformCode($code, $usePre)
    {
        $lines = explode("\n", $code);
        $html = "<div class=\"content-computercode\"><ol class=\"codelisting\">\n";

        for ($i = 1, $cou = count($lines); $i <= $cou; ++$i) {
            if ($usePre) {
                $line = empty($lines[$i - 1]) ? ' ' : htmlspecialchars($lines[$i - 1]);
                $line = '<div><pre>' . $line . '</pre></div>';
            } else {
                $line = empty($lines[$i - 1]) ? '&nbsp;' : htmlspecialchars($lines[$i - 1]);
                $line = str_replace(' ', '&nbsp;', $line);
                $line = '<div>' . $line . '</div>';
            }
            $html .= "<li>$line</li>\n";
        }

        $html .= "</ol></div>\n";

        return $html;
    }
}
