<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\ContentType;

use Zikula\ContentModule\AbstractContentType;
use Zikula\ContentModule\ContentTypeInterface;
use Zikula\ContentModule\ContentType\Form\Type\BreadcrumbType as FormType;

/**
 * Breadcrumb content type.
 */
class BreadcrumbType extends AbstractContentType
{
    /**
     * @inheritDoc
     */
    public function getCategory()
    {
        return ContentTypeInterface::CATEGORY_BASIC;
    }

    /**
     * @inheritDoc
     */
    public function getIcon()
    {
        return 'sitemap';
    }

    /**
     * @inheritDoc
     */
    public function getTitle()
    {
        return $this->__('Breadcrumb');
    }

    /**
     * @inheritDoc
     */
    public function getDescription()
    {
        return $this->__('Show breadcrumbs for hierarchical pages.');
    }

    /**
     * @inheritDoc
     */
    public function getDefaultData()
    {
        return [
            'includeSelf' => true, 
            'includeHome' => false
        ];
    }

    public function displayView()
    {
        $currentPage = $this->getEntity()->getPage();
        $this->data['currentPageId'] = $currentPage->getId();

        $pages = [];
        if (true === $this->data['includeSelf']) {
            $pages[] = $currentPage;
        }

        while (null !== $currentPage['parent']) {
            $currentPage = $currentPage['parent'];
            //if ($currentPage->getLvl() > 0) {
                array_unshift($pages, $currentPage);
            //}
        }

        $this->data['pages'] = $pages;

        return parent::displayView();
    }

    /**
     * @inheritDoc
     */
    public function getEditFormClass()
    {
        return FormType::class;
    }
}
