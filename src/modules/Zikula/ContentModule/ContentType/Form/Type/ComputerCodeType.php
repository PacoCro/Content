<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @link https://zikula.de
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\ContentType\Form\Type;

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\FormBuilderInterface;
use Zikula\Bundle\CoreBundle\HttpKernel\ZikulaHttpKernelInterface;
use Zikula\Common\Translator\TranslatorInterface;
use Zikula\Common\Translator\TranslatorTrait;

/**
 * Computer code form type class.
 */
class ComputerCodeType extends AbstractType
{
    use TranslatorTrait;

    /**
     * @var ZikulaHttpKernelInterface
     */
    protected $kernel;

    /**
     * ComputerCodeType constructor.
     *
     * @param TranslatorInterface       $translator Translator service instance
     * @param ZikulaHttpKernelInterface $kernel     Kernel service instance
     */
    public function __construct(TranslatorInterface $translator, ZikulaHttpKernelInterface $kernel)
    {
        $this->setTranslator($translator);
        $this->kernel = $kernel;
    }

    /**
     * Sets the translator.
     *
     * @param TranslatorInterface $translator Translator service instance
     */
    public function setTranslator(TranslatorInterface $translator)
    {
        $this->translator = $translator;
    }

    /**
     * @inheritDoc
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $filterChoices = [
            $this->__('Use native filter') => 'native'
        ];
        if ($this->kernel->isBundle('ZikulaBBCodeModule')) {
            $filterChoices[$this->__('Use BBCode filter')] = 'bbcode';
        }
        if ($this->kernel->isBundle('PhaidonLuMicuLaModule')) {
            $filterChoices[$this->__('Use LuMicuLa filter')] = 'lumicula';
        }

        $builder
            ->add('text', TextareaType::class, [
                'label' => $this->__('Computer code lines') . ':'
            ])
            ->add('codeFilter', ChoiceType::class, [
                'label' => $this->__('Code filter') . ':',
                'help' => $this->__('If ZikulaBBCodeModule or PhaidonLuMicuLaModule is available, you can filter your code with them instead of the native filter. There is no need to hook these modules to Content for this functionality.'),
                'choices' => $filterChoices,
                'expanded' => true
            ])
        ;
    }

    /**
     * @inheritDoc
     */
    public function getBlockPrefix()
    {
        return 'zikulacontentmodule_contenttype_computercode';
    }
}
