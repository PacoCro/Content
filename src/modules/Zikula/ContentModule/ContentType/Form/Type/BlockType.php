<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <info@ziku.la>.
 * @link https://ziku.la
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\ContentType\Form\Type;

use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\FormBuilderInterface;
use Zikula\BlocksModule\Entity\BlockEntity;
use Zikula\Common\Translator\TranslatorInterface;
use Zikula\Common\Translator\TranslatorTrait;

/**
 * Block form type class.
 */
class BlockType extends AbstractType
{
    use TranslatorTrait;

    /**
     * @var ObjectManager The object manager to be used for determining the repository
     */
    private $objectManager;

    /**
     * BlockType constructor.
     *
     * @param TranslatorInterface $translator    Translator service instance
     * @param ObjectManager       $objectManager The object manager to be used for determining the repositories
     */
    public function __construct(TranslatorInterface $translator, ObjectManager $objectManager)
    {
        $this->setTranslator($translator);
        $this->objectManager = $objectManager;
    }

    /**
     * Sets the translator.
     *
     * @param TranslatorInterface $translator Translator service instance
     */
    public function setTranslator(TranslatorInterface $translator)
    {
        $this->translator = $translator;
    }

    /**
     * @inheritDoc
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $blockRepository = $this->objectManager->getRepository(BlockEntity::class);
        $blocks = $blockRepository->findAll();

        $choices = [];
        foreach ($blocks as $block) {
            $choices[$block->getModule()->getDisplayName() . ' - ' . $block->getTitle()] = $block->getBid();
        }
        ksort($choices);

        $builder
            ->add('blockId', ChoiceType::class, [
                'label' => $this->__('Block to display') . ':',
                'choices' => $choices
            ])
        ;
    }

    /**
     * @inheritDoc
     */
    public function getBlockPrefix()
    {
        return 'zikulacontentmodule_contenttype_block';
    }
}
