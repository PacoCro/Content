<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <vorstand@zikula.de>.
 * @link https://zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\ContentType;

use Zikula\ContentModule\AbstractContentType;
use Zikula\ContentModule\ContentTypeInterface;
use Zikula\ContentModule\ContentType\Form\Type\SlideshareType as FormType;

/**
 * Slideshare content type.
 */
class SlideshareType extends AbstractContentType
{
    /**
     * @inheritDoc
     */
    public function getCategory()
    {
        return ContentTypeInterface::CATEGORY_EXTERNAL;
    }

    /**
     * @inheritDoc
     */
    public function getIcon()
    {
        return 'slideshare';
    }

    /**
     * @inheritDoc
     */
    public function getTitle()
    {
        return $this->__('Slideshare');
    }

    /**
     * @inheritDoc
     */
    public function getDescription()
    {
        return $this->__('Display slides from slideshare.com.');
    }

    /**
     * @inheritDoc
     */
    public function getDefaultData()
    {
        return [
            'url' => '',
            'text' => '',
            'slideId' => '',
            'width' => 599,
            'height' => 487
        ];
    }

/** TODO
    function display()
    {
        $this->view->assign('url', $this->url)
                   ->assign('text', $this->text)
                   ->assign('slideId', $this->slideId)
                   ->assign('width', $this->width)
                   ->assign('height', $this->height);

        $urlParts = explode(' ', $this->url);
        $urlParts = explode('&', $urlParts[1]);
        $urlParts = explode('=', $urlParts[0]);
        $this->view->assign('id', $urlParts[1]);

        return $this->view->fetch($this->getTemplate());
    }
    function displayEditing()
    {
        $output = '<div style="background-color:#ddd; width:320px; height:200px; margin:0 auto; padding:15px;">' . $this->__f('Slideshare: %s', $this->slideId) . '</div>';
        $output .= '<p style="width:320px; margin:0 auto;">' . DataUtil::formatForDisplay($this->text) . '</p>';
        return $output;
    }
    function isValid(&$data)
    {
        // [slideshare id=3318451&doc=rainfallreport-100302124103-phpapp02]
        $r = '/^[slideshare id=[0-9]+\&doc=([^&]+?)\]/';
        if (preg_match($r, $data['url'], $matches)) {
            $this->slideId = $data['slideId'] = $matches[1];
            return true;
        }
        return false;
    }
*/
    /**
     * @inheritDoc
     */
    public function getEditFormClass()
    {
        return FormType::class;
    }
}
