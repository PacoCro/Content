<?php
/**
 * Content.
 *
 * @copyright Axel Guckelsberger (Zikula)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Axel Guckelsberger <vorstand@zikula.de>.
 * @link https://zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 1.3.2 (https://modulestudio.de).
 */

namespace Zikula\ContentModule\ContentType;

use Zikula\ContentModule\AbstractContentType;

/**
 * Page navigation content type.
 */
class PageNavigationType extends AbstractContentType
{
    /**
     * @inheritDoc
     */
    public function getCategory()
    {
        return ContentTypeInterface::CATEGORY_BASIC;
    }

    /**
     * @inheritDoc
     */
    public function getIcon()
    {
        return 'map-signs';
    }

    /**
     * @inheritDoc
     */
    public function getTitle()
    {
        return $this->__('Page navigation');
    }

    /**
     * @inheritDoc
     */
    public function getDescription()
    {
        return $this->__('Allows to navigate within pages on the same level.');
    }

/** TODO
    function display()
    {
        $prevpage = null;
        $nextpage = null;

        $page = ModUtil::apiFunc('Content', 'Page', 'getPage', array('id' => $this->pageId));

        $tables = DBUtil::getTables();
        $pageTable = $tables['content_page'];
        $pageColumn = $tables['content_page_column'];

        $options = array('makeTree' => true);
        $options['orderBy'] = 'position';
        $options['orderDir'] = 'desc';
        $options['pageSize'] = 1;
        $options['filter']['superParentId'] = $page['parentPageId'];

        if ($page['position'] > 0) {
            $options['filter']['where'] = "$pageColumn[level] = $page[level] and $pageColumn[position] < $page[position]";

            $pages = ModUtil::apiFunc('Content', 'Page', 'getPages', $options);
            if (count($pages) > 0) {
                $prevpage = $pages[0];
            }
        }

        if (isset($page['position']) && $page['position'] >= 0) {
            $options['orderDir'] = 'asc';
            $options['filter']['where'] = "$pageColumn[level] = $page[level] and $pageColumn[position] > $page[position]";
            $pages = ModUtil::apiFunc('Content', 'Page', 'getPages', $options);
            if (count($pages) > 0) {
                $nextpage = $pages[0];
            }
        }

        $this->view->assign('loggedin', UserUtil::isLoggedIn());
        $this->view->assign('page', $page);
        $this->view->assign('prevpage', $prevpage);
        $this->view->assign('nextpage', $nextpage);
        return $this->view->fetch($this->getTemplate());
    }
    function displayEditing()
    {
        return "<h3>" . $this->__('Page navigation')."</h3>";
    }
*/
    /**
     * @inheritDoc
     */
    public function getEditFormClass()
    {
        return ''; // TODO
    }
}
