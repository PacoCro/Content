{# purpose of this template: pages display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : (routeArea == 'admin' ? 'adminBase' : 'base') %}
{% extends 'ZikulaContentModule::' ~ baseTemplate ~ '.html.twig' %}
{% block appTitle %}
    {% if inList is not defined %}
        {{ parent() }}
    {% endif %}
{% endblock %}
{% block pageTitle %}{{ page|zikulacontentmodule_formattedTitle|default(__('Page')) }}{% endblock %}
{% block title %}
    {% set templateTitle = page|zikulacontentmodule_formattedTitle|default(__('Page')) %}
    {% if page.skipHookSubscribers %}
        {{ templateTitle|safeHtml }}
    {% else %}
        {{ templateTitle|notifyFilters('zikulacontentmodule.filter_hooks.pages.filter')|safeHtml }}
    {% endif %}
    {% if page.metaDescription is not empty %}
        {{ pageSetVar('meta.description', page.metaDescription|striptags) }}
    {% endif %}
{% endblock %}
{% block titleArea %}
    {% if page.showTitle and inList is not defined %}
        {{ parent() }}
    {% endif %}
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div id="page{{ page.id }}" class="zikulacontentmodule-page zikulacontentmodule-display">

    <div class="row">
        <div class="col-xs-12">
            {% if inList is not defined %}
                {% set itemActions = knp_menu_get('ZikulaContentModule:ItemActionsMenu:menu', [], {entity: page, area: routeArea, context: 'display'}) %}
                <div class="btn-group btn-group-sm item-actions" role="group" aria-label="{{ __('Actions') }}">
                    {{ knp_menu_render(itemActions, {template: 'ZikulaMenuModule:Override:bootstrap_fontawesome.html.twig'}) }}
                </div>
            {% endif %}
    {# enable if needed
    <dl>
        {% if getModVar('ZikulaContentModule', 'enableOptionalString1', false) and page.optionalString1 is not empty %}
            <dt>{{ __('Optional string 1') }}</dt>
            <dd>{{ page.optionalString1 }}</dd>
        {% endif %}
        {% if getModVar('ZikulaContentModule', 'enableOptionalString2', false) and page.optionalString2 is not empty %}
            <dt>{{ __('Optional string 2') }}</dt>
            <dd>{{ page.optionalString2 }}</dd>
        {% endif %}
        {% if getModVar('ZikulaContentModule', 'enableOptionalText', false) and page.optionalText is not empty %}
            <dt>{{ __('Optional text') }}</dt>
            <dd>{{ page.optionalText|safeHtml }}</dd>
        {% endif %}
        {% if page.views is not empty %}
            <dt>{{ __('Views') }}</dt>
            <dd>{{ page.views }}</dd>
        {% endif %}
    </dl>
    #}
    {{ block('content_elements') }}
    {% if routeArea == 'admin' and featureActivationHelper.isEnabled(constant('Zikula\\ContentModule\\Helper\\FeatureActivationHelper::CATEGORIES'), 'page') %}
        {{ include('@ZikulaContentModule/Helper/includeCategoriesDisplay.html.twig', {obj: page}) }}
    {% endif %}
    {# enable if needed
    {% if featureActivationHelper.isEnabled(constant('Zikula\\ContentModule\\Helper\\FeatureActivationHelper::TREE_RELATIVES'), 'page') %}
        <h3 class="relatives">{{ __('Relatives') }}</h3>
            {{ include(
                '@ZikulaContentModule/Page/displayTreeRelatives.html.twig',
                {allParents: true, directParent: true, allChildren: true, directChildren: true, predecessors: true, successors: true, preandsuccessors: true}
            ) }}
    {% endif %}
    {{ include('@ZikulaContentModule/Helper/includeStandardFieldsDisplay.html.twig', {obj: page}) }}
    #}
    {% if not page.skipHookSubscribers %}
        {{ block('display_hooks') }}
    {% endif %}
        </div>
    </div>
</div>
{{ zikulacontentmodule_increaseAmountOfPageViews(page) }}
{% endblock %}
{% block display_hooks %}
    {% set hooks = notifyDisplayHooks(eventName='zikulacontentmodule.ui_hooks.pages.display_view', id=page.getKey(), urlObject=currentUrlObject, outputAsArray=true) %}
    {% if hooks is iterable and hooks|length > 0 %}
        {% for area, hook in hooks %}
            <div class="z-displayhook" data-area="{{ area|e('html_attr') }}">{{ hook|raw }}</div>
        {% endfor %}
    {% endif %}
{% endblock %}
{% block content_elements %}
    {% if page.layout|default and page.layout is iterable and page.layout|length > 0 %}
        {% set contentElements = zikulacontentmodule_contentDetails(page) %}
        {% set showElement = true %}
        {% if inList is defined %}
            {% set showElement = list in ['extended', 'complete'] %}
        {% endif %}
        {% for section in page.layout if showElement == true and section.widgets|default and section.widgets is iterable and section.widgets|length > 0 %}
            <div class="row section">
                {% set lastWidget = null %}
                {% for widget in section.widgets %}
                    {% set contentElement = null %}
                    {% for item in page.contentItems if item.id == widget.id %}
                        {% set contentElement = item %}
                    {% endfor %}
                    {% if contentElement != null and showElement == true %}
                        {% if zikulacontentmodule_maySeeElement(contentElement) %}
                            {% set colOffset = 0 %}
                            {% if lastWidget|default and widget.y == lastWidget.y %}
                                {% set colOffset = widget.x - (lastWidget.x + lastWidget.width) %}
                            {% else %}
                                {% set colOffset = widget.x %}
                            {% endif %}
                            <div id="contentElement{{ widget.id }}" class="content-element {{ contentElement.owningType|humanize|lower|replace({' ': '-'})|replace({'\\': ''})|replace({'-content-type': ''}) }} col-sm-{{ widget.width }}{% if colOffset > 0 %} col-sm-offset-{{ colOffset }}{% endif %}">
                                {{ contentElements[widget.id]|raw }}
                            </div>
                            {% if showElement == true and inList is defined and list == 'extended' %}
                                {# extended list shows only the first content element #}
                                {% set showElement = false %}
                            {% endif %}
                        {% endif %}
                    {% endif %}
                    {% set lastWidget = widget %}
                {% endfor %}
            </div>
        {% endfor %}
    {% endif %}
{% endblock %}
{% block footer %}
    {% if inList is not defined %}
        {{ parent() }}
    {% endif %}
{% endblock %}
